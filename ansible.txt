introduction to ansible
------------------------>

assues that we have 100 server
need to install vim and wget pkgs on all servers
first we will go with one server 

 login to each server
 check vim and wget pkgs installed on not
 if not inthen install using istalled 

assues that this process took 6 min
then for 100 server 600min, which is equals to 10hr 

assues that we are good with shell script.
assume that shell scripting is taking 3min of timn to complete our task per 
server
so total time rq 300min which is eq to 5hr 

if we go with any automation tools like ansible,chef,puppet,salt or any
other then we can complete this simple task in 3min.

ansible will execute a task on all server parallelly so it will task only 3min
of time for any no. of server for our rq.

genrally writing shell script is complex compare to playbook and playbook are very 
short in code length.

it is open source 
it is very simple to setup and yet powerful
configuration mang.
app. deployment

-------------------------------------------------->
How Ansible Works?
------------------>
Control Machine : It manages the execution of the Playbook. It can be installed on your local machine or on any machine on the internet.

Inventory : It provides a complete list of all the target machines on which various modules are run by doing an ssh connection and install the necessary software.

Playbook : It consists of steps that the control mechanism will perform on the servers defined in the inventory file.

Ansible interacts with all the servers defined in the inventory through the SSH protocol which is a secure method of remote login. Every operation is done and file transfer is encrypted.



2nd lec
-------->
ansible installation 

prerequisites for ansiblew engine/contrrol node:

RHEL/centos/Debian/Ubuntu linux with python @ (version 2.7) or python 3
(version 3.5 and higher) installed
windows isn't supported for the control node

note-->ansible version 2.4 and later can manage earlier os that contain python 2.6 or higher

cat /etc/os-release

ansible uses ssh for operations 

why ansible
------------>
it is free open source automation tool and simple 
using existing openssh  no need to install any extra software 
agent-less no need to install any agent on ansible clients/nodes 
phython/yaml based    --->easy to write
large no. of ready to use modules for system management.
custom modules can be added if needed.


whenever we want to work with ansible we need to install ansible and configure nodes
so our ansible engine will know we neeed to work with so and so server.

NOTE--->your ansible engine should be unix(os) based but your 
 
https://docs.ansible.com/  -->goto that website 
select installation 

Installing Ansible
left side corner you see latest version you can select according to your requirement.

NOTE -->your ansible engine should be unix (os) based but your remote nodes can be any os like windows,unix.

# sudo yum install ansible

sudo yum install python3 -y

sudo yum install epel-release -y 

#https://fedoraproject.org/wiki/EPEL  -->you can select repo based on your version os

sudo yum update -y

sudo yum install ansible -y

ansible --version 

o/p be like
ansible 2.9.10                                                                                                        --->version
  config file = /etc/ansible/ansible.cfg                                                                              --->config file location 
  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /usr/bin/ansible                                                                              -->location where my ansible is installed
  python version = 2.7.5 (default, Aug  7 2019, 00:51:29) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]                     -->python version 

cd /etc/ansible   -->see the all files these are important file 

---------------------------------------
install and configure ansible part2
------------------------------------>

launch/select required no of server which are call managed nodes/clients
requiremnet for managed node/client
  -->python 2 (version 2.6 or later) or python 3

NOTE -->we can also work without python on managed nodes that is using raw 
modules.but if python is install on your remote nodes it is beneficial to us.

ansible engine uses ssh connection to connect and work with manage nodes 
we can create ssh in two ways:
  -->password authentication 
  -->password less authentication (this is with ssh-key)     90% organization are using this approch
-->provide the manage nodes ip/fqdn in inventory file on ansible engine.

simple test the configuration by running :ansible all -m ping 

steps: password less authentication
------------------------------------>
create same user (anadmin) across all server and provide password for all user.
vim/etc/sudousr
ansadmin ALL=NOPASSWD: ALL
provide root privileges to all users on all server.
make sure that password authentication yes in all server under /etc/ssh/sshd_config file.

systemctl restart sshd 

goto ansible engine-->su ansadmin-->ssh-keygen

cd /home/ansadmin/
ls -ltr 
.ssh      -->this file is genrated 
cd .ssh/

id_rsa         --->this is private key
id_rsa.pub     --->this is public key

now -->copy ssh public key using  ssh-copy-id <hostname> from /home/ansadmin/.ssh location.

goto ansible engine
-------------------->
ssh-copy-id -i /home/ansadmin/.ssh/id_rsa.pub ansadmin@192.168.1.31  -->once we copied so it will allowed master without password.
ssh-copy-id -i /home/ansadmin/.ssh/id_rsa.pub ansadmin@192.168.1.49

ansible server and wo kaam krega jo manage nodes per hoga

ssh-copy-id  -i  /home/ansadmin/.ssh/id_rsa.pub localhost
 
the benefit of this process is type--> ssh 192.168.1.31
you hav logged in on remote machine.(this is password less authentication).

NOTE --->if your ansible engine is runnnig on vmware is and your remote machine runnnig on AWS so in this case provide public ip.

now login to the host server without provideing password 
ssh username@<i/p>

update inventory files
----------------------->
cd /etc/ansible 

vim  /home/ansadmin/hosts

inside this hosts file we need to pass our remote server ip in next video we will 
create our own inventory files.

now we can test connection from ansible engine to manage node using 
  -->ansible all -m ping 


now it is pinging,in case of not pinging pass value like this
192.168.0.10 ansible_sudo_pass='/home/ansible/id_rsa.pub' ansible_ssh_user=ansadmin

or 
goto control node machine switch user which you have created for all servers.
make sure your sshd service is running.
firewalld allow port 22.
----------------------------------------------------------------->
lec 6th
-------->
cd /etc/ansible
vim hosts   --->manage nodes information pass here.

cat /etc/ansible/ansible.cfg  | head -20 

o/p like this

 some basic default values...

#inventory      = /etc/ansible/hosts       -->default inventory location     
#library        = /usr/share/my_modules/
#module_utils   = /usr/share/my_module_utils/
#remote_tmp     = ~/.ansible/tmp
#local_tmp      = ~/.ansible/tmp
#plugin_filters_cfg = /etc/ansible/plugin_filters.yml
#forks          = 5

NOTE --> ansible inventory file (host) name can be anything.
su root
give permission to /home/<username>   
su <username>
cd /home/<username>
mkdir my_ansible_working_dir
cp -R /etc/ansible/* .
vim inventory 
vim ansible.cfg
inventory      = ./inventory

if you got any error releted to permission 
chmod 400 ~/.ssh/id_rsa

ansible all -m ping 

ansible all -m ping -i inventory     

---------------------------------------------------------->
how to disable host key checking or what is host key ? important

if you are login with any machine i will ask to you 
are you sure you want to continue connecting (yes/no(fingerprint)?  

cat ansible.cfg | grep -i host_key

#host_key_checking = False       -->uncomment this line
host_key_checking = False      

------------------------------------------------------------>
inventory file with group and group of group 

the ansible inventory file defines the list of hosts,upon which ansible 
works.
whenever we are working with real time so we are not touch ansible main configureations files.
bcz there are some more person's who also want to work with that control nodes.so just assume
you create two directories   my_production and non_production copy all the configuration 
to in these two location and change ansible.cnf file according to your req.it depends or your need 
how to will modify assues its two diffrent env .

vim inventory 
[web]
192.168.1.31

[test]
192.168.1.49

ansible test -m ping 

somtimes you want to work,install,uninstall with one or multiple group if you have 
multiple group you can use like this 
ansible group1:group2:gruop3 -m ping 
ansible localhost -m ping
ansible 192.168.1.42 -m ping  


[group:children]       -->group of group 
web
test
ansible group -m ping 

-------------------------------------------------------------->
diffrent locations for ansible.cfg

if you are in /home/new location and type 
ansible --version    
config file = /etc/ansible/ansible.cfg     -->so it is taking deafult
 ansible config file only 

--------------------------------------------------------------->
what is ad-hoc command? age kbhi sirf ls command run krni h nodes per to script na likhna pde iske
lie ad-hoc command us hoti h.

the Ad-hoc command is the one-liner ansible command that performs one task on target host/groups

ansible all -m shell -a "uptime"      -->uptime of all nodes 
ansible group1:group2 -m shell -a "uptime"
ansible group1:group2 -m shell -a "free -h"
ansible -i <inventory-name> -m shell -a "uptime"

ansible adhoc command syntax
----------------------------->
ansible [-i prod_inv] servername:group1:group2 -m module [-a argument_value]    

konsa module lena h pta kese chalega ? module ek type predifned programme h.that is useful to execute task 
based on our task 
ansible-doc -l
ansible-doc -l | grep shel


transfer a file using Ansible ad-hoc command 
--------------------------------------------->
transfer files from ansible engine to remote nodes

https://docs.ansible.com/ansible/2.5/modules/copy_module.html   -->complete url

ansible db_servers -m copy -a "src=./hosts dest=/tmp"
ansible test -m copy -a "content='testing' dest=/tmp/heelo.txt"
ansible test -m copy -a "content='testing' dest=/tmp/heelo.txt backup=yes"    -->now it tasked backup also 

